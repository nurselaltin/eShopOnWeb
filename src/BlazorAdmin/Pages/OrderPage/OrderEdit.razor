@inject ILogger<OrderEdit> Logger
@inject IJSRuntime JSRuntime
@inject IOrderService OrderService

@inherits BlazorAdmin.Helpers.BlazorComponent

@namespace BlazorAdmin.Pages.OrderPage

<div class="modal @_modalClass" tabindex="-1" role="dialog" style="display:@_modalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <EditForm Model="_item" OnValidSubmit="@SaveClick">
                <DataAnnotationsValidator />
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Order Edit  @_item.BuyerId</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    @if(_item == null)
                    {
                        <Spinner></Spinner>
                    }
                    else
                    {
                    <div class="modal-body">
                      
                            <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="control-label col-md-6">Buyer Id</label>
                                        <div class="col-md-12">
                                            <textarea style="resize: none;" rows="1" @bind="_item.BuyerId" readonly></textarea>

                                        </div>
                                    </div>
                            </div>
                            <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="control-label col-md-6">Order Date</label>
                                        <div class="col-md-12">
                                            <textarea style="resize: none;" rows="1" @bind="_item.OrderDate" readonly></textarea>

                                        </div>
                                    </div>
                            </div>
                            <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="control-label col-md-6">Total</label>
                                        <div class="col-md-12">
                                            <textarea style="resize: none;" rows="1" @bind="_item.Total" readonly></textarea>

                                        </div>
                                    </div>
                            </div>
                            <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="control-label col-md-6">Order Status</label>
                                        <div class="col-md-12">
                                            <select @bind="_item.OrderStatus">
                                                <option value="PENDING">PENDING</option>
                                                <option value="CANCELLED">CANCELLED</option>
                                                <option value="APPROVED">APPROVED</option>
                                            </select>


                                        </div>
                                    </div>
                            </div>
                       
                    </div>
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        Save
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>



@if (_showEditModal)
{
    <div class="modal-backdrop fade show"></div>
}

@code {


    [Parameter]
    public EventCallback<string> OnSaveClick { get; set; }

    private string _badFileMessage = string.Empty;
    private string _modalDisplay = "none;";
    private string _modalClass = "";
    private bool _showEditModal = false;
    private Order _item = new Order();

    private async Task SaveClick()
    {
        await OrderService.Edit(_item);
        await OnSaveClick.InvokeAsync(null);
        await Close();
    }

    public async Task Open(int id)
    {
        Logger.LogInformation("Now loading... /Order/Edit/{Id}", id);

        await new Css(JSRuntime).HideBodyOverflow();

        _item = await OrderService.GetById(id);

        _modalDisplay = "block;";
        _modalClass = "Show";
        _showEditModal = true;

        StateHasChanged();
    }

    private async Task Close()
    {
        await new Css(JSRuntime).ShowBodyOverflow();

        _modalDisplay = "none";
        _modalClass = "";
        _showEditModal = false;
    }
}
